{"id":"main.js","dependencies":[{"name":"C:\\Users\\Adnan\\Desktop\\design Learning\\Top Eng\\package.json","includedInParent":true,"mtime":1711189070825},{"name":"../../../../frontend/src/style/Index.css","loc":{"line":1,"column":7,"index":7},"parent":"C:\\Users\\Adnan\\Desktop\\design Learning\\Top Eng\\backend\\src\\public\\js\\main.js","resolved":"C:\\Users\\Adnan\\Desktop\\design Learning\\Top Eng\\frontend\\src\\style\\Index.css"}],"generated":{"js":"\"use strict\";\n\nrequire(\"../../../../frontend/src/style/Index.css\");\nvar navMobile = document.querySelector('.nav__mobile');\nvar overlayNav = document.querySelector('.overlay');\nvar navBtnClose = document.querySelector('.nav__btn__close');\nvar portfolioContainer = document.querySelector('.portfolio-container');\nvar btnAddExperience = document.querySelectorAll('.add-experience');\nvar educationContainer = document.querySelector('.education');\nvar workExperienceContainer = document.querySelector('.workexperience');\n// sliding  mobile nav\nvar btnMenu = document.querySelector('.btn__menu');\nfunction navMobileClose() {\n  navMobile.classList.remove('nav__mobile--active');\n  overlayNav.classList.remove('overlay-blur');\n  overlayNav.classList.add('overlay-nav');\n}\noverlayNav.addEventListener('click', navMobileClose);\nnavBtnClose.addEventListener('click', navMobileClose);\nbtnMenu.addEventListener('click', function () {\n  navMobile.classList.toggle('nav__mobile--active');\n  overlayNav.classList.toggle('overlay-blur');\n  overlayNav.classList.remove('overlay-nav');\n});\n\n// adding education/work experience when clicking plus button\nfunction workOrEducation(type) {\n  if (type === 'work') return \"work\";\n  if (type === 'education') return \"education\";else return 'eror';\n}\nfunction AddEducationOrWork() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'work';\n  // console.log(type);\n  return \"<div class=\\\"margin-left experience-container \\\">\\n                \\n                <div class=\\\"form__group \\\"> \\n                    <label class=\\\"form__label\\\"for=\\\"\".concat(type, \"title\\\">\").concat(workOrEducation(type), \" Title</label>\\n                    <input class=\\\"form__input\\\"id=\\\"\").concat(type, \"title\\\" type=\\\"\").concat(workOrEducation(type), \"title\\\" placeholder=\\\"\").concat(type === 'work' ? 'Senior Developer' : 'High school diploma', \"\\\" >\\n                </div>\\n                <div class=\\\"form__group \\\"> \\n                    <label class=\\\"form__label \\\" for=\\\"\").concat(type, \"place\\\">\").concat(workOrEducation(type), \" Place</label>\\n                    <input class=\\\"form__input\\\" id=\\\"\").concat(type, \"place\\\" type=\\\"\").concat(workOrEducation(type), \"place\\\" placeholder=\\\"\").concat(type === 'work' ? 'e.g Asiacell Telecome' : 'Baghdad College', \"\\\" >\\n                </div>\\n                <div class=\\\"form__group \\\"> \\n                    <label class=\\\"form__label \\\" for=\\\"\").concat(type, \"description\\\">\").concat(workOrEducation(type), \" Description</label>\\n                    <input class=\\\"form__input\\\" id=\\\"\").concat(type, \"description\\\" type=\\\"\").concat(type, \"description\\\"  >\\n                </div>\\n                <div class=\\\"form__group \\\"> \\n                    <label class=\\\"form__label\\\" for=\\\"\").concat(type, \"years\\\">\").concat(workOrEducation(type), \" Years</label>\\n                    <input class=\\\"form__input\\\" id=\\\"\").concat(type, \"years\\\" type=\\\"\").concat(type, \"years\\\" placeholder=\\\"\").concat(type === 'work' ? 'e.g 2020 - present' : 'e.g 2016 - 2020', \"\\\">\\n                </div>\\n                    <div class=\\\"remove-experience-container\\\">\\n                        <h4>Remove \").concat(type === 'work' ? 'Work Experience' : 'Education', \"</h4>\\n                    </div>\\n                </div>\");\n}\nif (btnAddExperience) {\n  btnAddExperience.forEach(function (button) {\n    button.addEventListener('click', function (e) {\n      var type = button.closest('.form').classList[2];\n      button.closest('.form').querySelector('.btn-container').insertAdjacentHTML('beforebegin', AddEducationOrWork(type));\n    });\n  });\n}\nif (portfolioContainer) {\n  portfolioContainer.addEventListener('click', function (e) {\n    var target = e.target.closest('.remove-experience-container');\n    if (target) {\n      target.closest('.experience-container').remove();\n    }\n  });\n}\nvar showMoreButton = document.querySelector('.category__btn');\nvar hiddenItems = document.querySelectorAll('.category--hidden');\nvar categoriesContainer = document.querySelector('.categories__container');\n// console.log(hiddenItems);\n\n// Showing all hidden categories\nvar showCategories = function showCategories() {\n  // Loop through hidden items and show them\n  hiddenItems.forEach(function (item) {\n    item.classList.remove('category--hidden');\n  });\n  // Hide the \"Show More\" button\n  showMoreButton.style.display = 'none';\n};\n\n// Check the screen width\nvar screenWidth = window.innerWidth;\nif (showMoreButton) {\n  if (screenWidth < 768) {\n    showMoreButton.addEventListener('click', showCategories);\n  } else {\n    // Hide the \"Show More\" button\n    showMoreButton.style.display = 'none';\n    // show all categories and change grid template\n    showCategories();\n    categoriesContainer.style.gridTemplateColumns = 'repeat(auto-fit, minmax(280px, 1fr))';\n  }\n}\n// =====search page - \"question tags\" functionallity=====\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Store selected tags for each question\n  var selectedTagsByQuestion = {};\n\n  // Get all answer tags\n  var answerTags = document.querySelectorAll('.question__tag');\n\n  // Add click event listener to each answer tag\n  answerTags.forEach(function (tag) {\n    tag.addEventListener('click', function () {\n      // Get the question associated with the tag\n      var questionContainer = tag.closest('.search-question');\n      var questionId = questionContainer.id;\n\n      // Initialize an array for the question if it doesn't exist\n      selectedTagsByQuestion[questionId] = selectedTagsByQuestion[questionId] || [];\n\n      // Toggle the 'selected' class when a tag is clicked\n      tag.classList.toggle('question__tag--active');\n\n      // Add or remove the tag from the selectedTagsByQuestion array\n      var tagValue = tag.innerText.trim();\n      var tagIndex = selectedTagsByQuestion[questionId].indexOf(tagValue);\n      if (tagIndex === -1) {\n        selectedTagsByQuestion[questionId].push(tagValue);\n      } else {\n        selectedTagsByQuestion[questionId].splice(tagIndex, 1);\n      }\n\n      // Log the selected tags for debugging (you can remove this in production)\n      console.log(selectedTagsByQuestion);\n    });\n  });\n});"},"sourceMaps":null,"error":null,"hash":"7b040b5dfa8995820769caae5f50c432","cacheData":{"env":{}}}